[gd_scene load_steps=13 format=3 uid="uid://c78q2fkcju0br"]

[ext_resource type="PackedScene" uid="uid://ccpeukrdsfbkm" path="res://游戏互动场景/卡牌/场景/card.tscn" id="1_1v6mk"]
[ext_resource type="Script" path="res://游戏互动场景/卡牌/脚本/xiaoxiaole.gd" id="1_y76cv"]

[sub_resource type="Shader" id="Shader_1ljee"]
code = "shader_type canvas_item;

uniform sampler2D dissolve_texture : source_color;
uniform float dissolve_value : hint_range(0,1);
uniform float burn_size: hint_range(0.0, 1.0, 0.01);
uniform vec4 burn_color: source_color;

void fragment(){
    vec4 main_texture = texture(TEXTURE, UV);
    vec4 noise_texture = texture(dissolve_texture, UV);
	
	// This is needed to avoid keeping a small burn_color dot with dissolve being 0 or 1
	// is there another way to do it?
	float burn_size_step = burn_size * step(0.001, dissolve_value) * step(dissolve_value, 0.999);
	float threshold = smoothstep(noise_texture.x-burn_size_step, noise_texture.x, dissolve_value);
	float border = smoothstep(noise_texture.x, noise_texture.x + burn_size_step, dissolve_value);
	
	COLOR.a *= threshold;
	COLOR.rgb = mix(burn_color.rgb, main_texture.rgb, border);
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_kntej"]
seed = -15
frequency = 0.0021
fractal_octaves = 4

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_bboy4"]
noise = SubResource("FastNoiseLite_kntej")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rk401"]
resource_local_to_scene = true
shader = SubResource("Shader_1ljee")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.03
shader_parameter/burn_color = Color(1.5, 0.924, 0, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_bboy4")

[sub_resource type="Shader" id="Shader_s7n0m"]
code = "shader_type canvas_item;

uniform sampler2D dissolve_texture : source_color;
uniform float dissolve_value : hint_range(0,1);
uniform float burn_size: hint_range(0.0, 1.0, 0.01);
uniform vec4 burn_color: source_color;

void fragment(){
    vec4 main_texture = texture(TEXTURE, UV);
    vec4 noise_texture = texture(dissolve_texture, UV);
	
	// This is needed to avoid keeping a small burn_color dot with dissolve being 0 or 1
	// is there another way to do it?
	float burn_size_step = burn_size * step(0.001, dissolve_value) * step(dissolve_value, 0.999);
	float threshold = smoothstep(noise_texture.x-burn_size_step, noise_texture.x, dissolve_value);
	float border = smoothstep(noise_texture.x, noise_texture.x + burn_size_step, dissolve_value);
	
	COLOR.a *= threshold;
	COLOR.rgb = mix(burn_color.rgb, main_texture.rgb, border);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_d7teo"]
resource_local_to_scene = true
shader = SubResource("Shader_s7n0m")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.03
shader_parameter/burn_color = Color(1.5, 0.924, 0, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_bboy4")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e2ee6"]
resource_local_to_scene = true
shader = SubResource("Shader_1ljee")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.03
shader_parameter/burn_color = Color(1.5, 0.924, 0, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_bboy4")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ng80c"]
resource_local_to_scene = true
shader = SubResource("Shader_1ljee")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.03
shader_parameter/burn_color = Color(1.5, 0.924, 0, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_bboy4")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_04dob"]
resource_local_to_scene = true
shader = SubResource("Shader_1ljee")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.03
shader_parameter/burn_color = Color(1.5, 0.924, 0, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_bboy4")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_axtkm"]
resource_local_to_scene = true
shader = SubResource("Shader_1ljee")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.03
shader_parameter/burn_color = Color(1.5, 0.924, 0, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_bboy4")

[node name="Xiaoxiaole" type="Node2D"]
script = ExtResource("1_y76cv")

[node name="Card" parent="." instance=ExtResource("1_1v6mk")]
material = SubResource("ShaderMaterial_rk401")
offset_left = 229.0
offset_top = 171.0
offset_right = 381.0
offset_bottom = 378.0

[node name="Card2" parent="." instance=ExtResource("1_1v6mk")]
material = SubResource("ShaderMaterial_d7teo")
offset_left = 801.0
offset_top = 172.0
offset_right = 953.0
offset_bottom = 379.0

[node name="Card3" parent="." instance=ExtResource("1_1v6mk")]
material = SubResource("ShaderMaterial_e2ee6")
offset_left = 225.0
offset_top = 501.0
offset_right = 377.0
offset_bottom = 708.0

[node name="Card4" parent="." instance=ExtResource("1_1v6mk")]
material = SubResource("ShaderMaterial_ng80c")
offset_left = 510.0
offset_top = 172.0
offset_right = 662.0
offset_bottom = 379.0

[node name="Card5" parent="." instance=ExtResource("1_1v6mk")]
material = SubResource("ShaderMaterial_04dob")
offset_left = 511.0
offset_top = 503.0
offset_right = 663.0
offset_bottom = 710.0

[node name="Card6" parent="." instance=ExtResource("1_1v6mk")]
material = SubResource("ShaderMaterial_axtkm")
offset_left = 798.0
offset_top = 505.0
offset_right = 950.0
offset_bottom = 712.0
